---
apiVersion: v1
kind: ConfigMap
metadata:
  name: csi-azuredisk-scheduler-extender-config
  namespace: {{ .Release.Namespace }}
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1alpha2
    kind: KubeSchedulerConfiguration
    leaderElection:
      leaderElect: true
      leaseDuration: "15s"
      renewDeadline: "10s"
      retryPeriod: "2s"
      resourceLock: leases
      resourceName: csi-azuredisk-scheduler-extender
      resourceNamespace: {{ .Release.Namespace }}
    profiles:
    - schedulerName: csi-azuredisk-scheduler-extender
    extenders:
    - urlPrefix: "http://localhost:{{ .Values.schedulerExtender.servicePort }}/azdiskschedulerextender"
      filterVerb: "filter"
      prioritizeVerb: "prioritize"
      weight: 1
      enableHttps: false
      nodeCacheCapable: false
      ignorable: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.schedulerExtender.name }}
  namespace: {{ .Release.Namespace }}
  labels: 
{{ include "azuredisk.labels" . | indent 4 }}
    app: {{ .Values.schedulerExtender.name }}
spec:
  replicas: {{ .Values.schedulerExtender.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.schedulerExtender.name }}
  template:
    metadata:
      labels:
{{ include "azuredisk.labels" . | indent 8}}
        app: {{ .Values.schedulerExtender.name }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.schedulerExtender }}
      nodeSelector:
        kubernetes.io/os: linux
        {{- if .Values.controller.runOnMaster}}
        kubernetes.io/role: master
        {{- end}}
      priorityClassName: system-cluster-critical
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/controlplane"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      volumes:
      - name: csi-azuredisk-scheduler-extender-config
        configMap:
          name: csi-azuredisk-scheduler-extender-config
      containers:
      - name: csi-azuredisk-scheduler
        image: k8s.gcr.io/kube-scheduler:{{ .Values.image.schedulerExtender.imageVersion }}
        imagePullPolicy: IfNotPresent
        args:
        - kube-scheduler
        - --config=/azdiskschedulerextender/config.yaml
        - --v=5
        - --feature-gates
        {{- if not .Values.feature.enableCSIMigration }}
        - CSIInlineVolume=true,LocalStorageCapacityIsolation=true,ServiceNodeExclusion=true
        {{- else }}
        - CSIInlineVolume=true,LocalStorageCapacityIsolation=true,ServiceNodeExclusion=true,CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureDiskComplete=true
        {{- end }}
        volumeMounts:
        - name: csi-azuredisk-scheduler-extender-config
          mountPath: /azdiskschedulerextender
      - name: csi-azuredisk-scheduler-extender
        image: "{{ .Values.image.schedulerExtender.repository }}:{{ .Values.image.schedulerExtender.tag }}"
        imagePullPolicy: {{ .Values.image.schedulerExtender.pullPolicy }}
        args:
        - "--port={{ .Values.schedulerExtender.servicePort }}"
        - "--metrics-address=0.0.0.0:{{ .Values.schedulerExtender.metricsPort}}"
        - "--v=5"
        livenessProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 2
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 3
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 20
          periodSeconds: 3
        ports:
          - name: extender-port
            containerPort: {{ .Values.schedulerExtender.servicePort }}
            hostPort: {{ .Values.schedulerExtender.servicePort }}
          - name: metrics-port
            containerPort: {{ .Values.schedulerExtender.metricsPort }}
            protocol: TCP